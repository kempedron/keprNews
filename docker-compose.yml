services:
  auth-service:
    build: 
      context: .
      dockerfile: ./cmd/auth-service/Dockerfile  
    env_file: 
      - .env
    ports:
      - "8081:8080"  # Основное приложение
      - "9081:8081"  # Метрики Prometheus
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    networks:
      - news-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s


  # Сервис статей
  article-service:
    build: 
      context: .
      dockerfile: ./cmd/article-service/Dockerfile  
    env_file: 
      - .env
    ports:
      - "8082:8080"  
      - "9082:8081"  
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    networks:
      - news-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s


  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./cmd/api-gateway/Dockerfile
    env_file: 
      - .env
    ports:
      - "8080:8080"  
      - "9080:8081"  
    depends_on:
      auth-service:
        condition: service_healthy
      article-service:
        condition: service_healthy
    restart: always
    networks:
      - news-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s


  db:
    image: postgres:14-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d  
    environment:
      POSTGRES_PASSWORD: 123456  
      POSTGRES_DB: auth_db  
      POSTGRES_USER: dbUser
    restart: always
    networks:
      - news-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbUser -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:7.4-alpine
    container_name: redis
    restart: always
    env_file:
      - .env
    volumes:
      - redis_data:/data
    networks:
      - news-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 3s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
    networks:
      - news-network
    depends_on:
      - api-gateway
      - auth-service
      - article-service

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - news-network
    depends_on:
      - prometheus

volumes:
  pgdata:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  news-network:
    driver: bridge